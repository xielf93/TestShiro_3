<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.shiro.mapper.OrganizationMapper" >

  <resultMap id="BaseResultMap" type="com.test.shiro.pojo.Organization" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="parent_ids" property="parentIds" jdbcType="VARCHAR" />
    <result column="available" property="available" jdbcType="BIT" />
  </resultMap>
  <resultMap type="com.test.shiro.pojo.Organization" id="LazyResultMap" extends="BaseResultMap">
  	<collection property="userSet" ofType="com.test.shiro.pojo.User" column="id" select="com.test.shiro.mapper.UserMapper.selectUserByOrgIdLazy"></collection>
  </resultMap>
  <resultMap type="com.test.shiro.pojo.Organization" id="ChildResultMap" extends="BaseResultMap">
  	<collection property="childList" ofType="com.test.shiro.pojo.Organization" column="id" select="selectChildByParent">
  	</collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, parent_id, parent_ids, available
  </sql>
  <select id="selectByPrimaryKey" resultMap="ChildResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_organization
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectChildByParent" resultMap="ChildResultMap" parameterType="java.lang.Long">
  	select 
    <include refid="Base_Column_List" />
    from sys_organization
    where parent_id = #{parentId}
  </select>
  <select id="selectAll" resultMap="ChildResultMap"  >
  	select
  	<include refid="Base_Column_List" />
    from sys_organization
    where parent_id = 0
  </select>
  <select id="selectAllOrg" resultMap="BaseResultMap" >
  	select
  	<include refid="Base_Column_List" />
    from sys_organization
  </select>
  <select id="selectCanMove"  resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
    from sys_organization
    where id not in
    <foreach collection="list" item="o" open="(" close=")" separator=",">
    	#{o.id}
    </foreach>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_organization
    where id = #{id,jdbcType=BIGINT}
    and id not in (select organization_id from sys_user)
    and not EXISTS  (select a.id from(select id from sys_organization where parent_id = #{id,jdbcType=BIGINT})a)
  </delete>
  <insert id="insertSelective" parameterType="com.test.shiro.pojo.Organization" >
    insert into sys_organization
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="parentIds != null" >
        parent_ids,
      </if>
      <if test="available != null" >
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="parentIds != null" >
        #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        #{available,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.shiro.pojo.Organization" >
    update sys_organization
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="parentIds != null" >
        parent_ids = #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>