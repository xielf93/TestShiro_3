<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!-- 配置Activiti -->
	<bean id="processEngineConfigureation" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<!-- 
		flase： 默认值。activiti在启动时，会对比数据库表中保存的版本，如果没有表或者版本不匹配，将抛出异常。
		true： activiti会对数据库中所有表进行更新操作。如果表不存在，则自动创建。
		create_drop： 在activiti启动时创建表，在关闭时删除表（必须手动关闭引擎，才能删除表）。
		drop-create： 在activiti启动时删除原来的旧表，然后在创建新表（不需要手动关闭引擎）。
		 -->  
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="false" />
		<property name="deploymentResources" value="classpath:process/*" />
		<property name="activityFontName" value="宋体"></property>
		<property name="labelFontName" value="宋体"></property>
		<property name="annotationFontName" value="宋体"/>
		<property name="customPostDeployers">
			<list>
				<bean class="org.activiti.engine.impl.rules.RulesDeployer" />
			</list>
		</property>
	</bean>
	
	
	<bean id="processEngineFactory" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfigureation" />
	</bean>
	
	<bean id="repositoryService" factory-bean="processEngineFactory"
		factory-method="getRepositoryService" />
	<bean id="runtimeService" factory-bean="processEngineFactory"
		factory-method="getRuntimeService" />
	<bean id="formService" factory-bean="processEngineFactory"
		factory-method="getFormService" />
	<bean id="identityService" factory-bean="processEngineFactory"
		factory-method="getIdentityService" />
	<bean id="taskService" factory-bean="processEngineFactory"
		factory-method="getTaskService" />
	<bean id="historyService" factory-bean="processEngineFactory"
		factory-method="getHistoryService" />
	<bean id="managementService" factory-bean="processEngineFactory"
		factory-method="getManagementService" />
</beans> 